{"ast":null,"code":"import React from\"react\";import{minutesToDuration}from\"../utils/duration/index.js\";// The single purpose of this compenent is to adjust the duration of both The focus and the break timer\nfunction DurationControl(_ref){var focusDuration=_ref.focusDuration,breakDuration=_ref.breakDuration,isTimerRunning=_ref.isTimerRunning,setFocusDuration=_ref.setFocusDuration,setBreakDuration=_ref.setBreakDuration;function increaseFocusDuration(){if(focusDuration<60){setFocusDuration(focusDuration+5);console.log(focusDuration);}}function decreaseFocusDuration(){if(focusDuration>5){setFocusDuration(focusDuration-5);console.log(focusDuration);}}function increaseBreakDuration(){if(breakDuration<15){setBreakDuration(breakDuration+1);console.log(breakDuration);}}function decreaseBreakDuration(){if(breakDuration>1){setBreakDuration(breakDuration-1);console.log(breakDuration);}}return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-lg mb-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",\"data-testid\":\"duration-focus\"},\"Focus Duration: \",minutesToDuration(focusDuration)),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"decrease-focus\",onClick:decreaseFocusDuration,disabled:focusDuration===5||isTimerRunning},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-minus\"})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"increase-focus\",onClick:increaseFocusDuration,disabled:focusDuration===60||isTimerRunning},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-plus\"}))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"float-right\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-lg mb-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",\"data-testid\":\"duration-break\"},\"Break Duration: \",minutesToDuration(breakDuration)),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"decrease-break\",onClick:decreaseBreakDuration,disabled:breakDuration===1||isTimerRunning},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-minus\"})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"increase-break\",onClick:increaseBreakDuration,disabled:breakDuration===15||isTimerRunning},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-plus\"}))))))));}export default DurationControl;","map":{"version":3,"sources":["C:/Users/Schen/thinkful/vscode/Project_Pomodoro_Timer_Qualified_1/src/DurationControl/DurationControl.js"],"names":["React","minutesToDuration","DurationControl","focusDuration","breakDuration","isTimerRunning","setFocusDuration","setBreakDuration","increaseFocusDuration","console","log","decreaseFocusDuration","increaseBreakDuration","decreaseBreakDuration"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,iBAAR,KAAgC,4BAAhC,CAEA;AAEA,QAASC,CAAAA,eAAT,MAA8G,IAAnFC,CAAAA,aAAmF,MAAnFA,aAAmF,CAApEC,aAAoE,MAApEA,aAAoE,CAArDC,cAAqD,MAArDA,cAAqD,CAArCC,gBAAqC,MAArCA,gBAAqC,CAAnBC,gBAAmB,MAAnBA,gBAAmB,CAE1G,QAASC,CAAAA,qBAAT,EAAgC,CAC5B,GAAGL,aAAa,CAAG,EAAnB,CAAuB,CACrBG,gBAAgB,CAACH,aAAa,CAAG,CAAjB,CAAhB,CACAM,OAAO,CAACC,GAAR,CAAYP,aAAZ,EACD,CACJ,CACC,QAASQ,CAAAA,qBAAT,EAAgC,CAClC,GAAGR,aAAa,CAAE,CAAlB,CAAqB,CACpBG,gBAAgB,CAACH,aAAa,CAAE,CAAhB,CAAhB,CACAM,OAAO,CAACC,GAAR,CAAYP,aAAZ,EACA,CACE,CACD,QAASS,CAAAA,qBAAT,EAAgC,CAChC,GAAGR,aAAa,CAAG,EAAnB,CAAsB,CACpBG,gBAAgB,CAACH,aAAa,CAAG,CAAjB,CAAhB,CACAK,OAAO,CAACC,GAAR,CAAYN,aAAZ,EACD,CACF,CACC,QAASS,CAAAA,qBAAT,EAAgC,CAChC,GAAGT,aAAa,CAAG,CAAnB,CAAqB,CACnBG,gBAAgB,CAACH,aAAa,CAAG,CAAjB,CAAhB,CACAK,OAAO,CAACC,GAAR,CAAYN,aAAZ,EACD,CACF,CAEL,mBAEA,2BAAK,SAAS,CAAC,KAAf,eACQ,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,iCAAf,eACE,4BAAM,SAAS,CAAC,kBAAhB,CAAmC,cAAY,gBAA/C,qBAEmBH,iBAAiB,CAACE,aAAD,CAFpC,CADF,cAME,2BAAK,SAAS,CAAC,oBAAf,eAEE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,cAAY,gBAHd,CAIE,OAAO,CAAEQ,qBAJX,CAKE,QAAQ,CAAER,aAAa,GAAK,CAAlB,EAAuBE,cALnC,eAOE,4BAAM,SAAS,CAAC,aAAhB,EAPF,CAFF,cAYE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,cAAY,gBAHd,CAIE,OAAO,CAAEG,qBAJX,CAKE,QAAQ,CAAEL,aAAa,GAAK,EAAlB,EAAwBE,cALpC,eAOE,4BAAM,SAAS,CAAC,YAAhB,EAPF,CAZF,CANF,CADF,CADR,cAkCM,4CACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,SAAS,CAAC,iCAAf,eACE,4BAAM,SAAS,CAAC,kBAAhB,CAAmC,cAAY,gBAA/C,qBAEmBJ,iBAAiB,CAACG,aAAD,CAFpC,CADF,cAME,2BAAK,SAAS,CAAC,oBAAf,eAEE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,cAAY,gBAHd,CAIE,OAAO,CAAES,qBAJX,CAKE,QAAQ,CAAET,aAAa,GAAK,CAAlB,EAAuBC,cALnC,eAOE,4BAAM,SAAS,CAAC,aAAhB,EAPF,CAFF,cAYE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,cAAY,gBAHd,CAIE,OAAO,CAAEO,qBAJX,CAKE,QAAQ,CAAER,aAAa,GAAK,EAAlB,EAAwBC,cALpC,eAOE,4BAAM,SAAS,CAAC,YAAhB,EAPF,CAZF,CANF,CADF,CADF,CADF,CAlCN,CAFA,CAyEC,CAED,cAAeH,CAAAA,eAAf","sourcesContent":["import React from \"react\"\nimport {minutesToDuration} from \"../utils/duration/index.js\"\n\n// The single purpose of this compenent is to adjust the duration of both The focus and the break timer\n\nfunction DurationControl ({focusDuration, breakDuration, isTimerRunning, setFocusDuration, setBreakDuration}) {\n\n    function increaseFocusDuration(){\n        if(focusDuration < 60) {\n          setFocusDuration(focusDuration + 5)\n          console.log(focusDuration)\n        }\n    }\n      function decreaseFocusDuration(){\n    if(focusDuration >5) {\n     setFocusDuration(focusDuration -5) \n     console.log(focusDuration)\n    }\n      }\n      function increaseBreakDuration(){\n      if(breakDuration < 15){\n        setBreakDuration(breakDuration + 1)\n        console.log(breakDuration)\n      }\n    }\n      function decreaseBreakDuration(){\n      if(breakDuration > 1){\n        setBreakDuration(breakDuration - 1) \n        console.log(breakDuration)\n      }\n    }\n\nreturn (\n\n<div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n              {/* change hard coded 25 to a variable that changes win the plus button is clicked. */}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={decreaseFocusDuration}\n                disabled={focusDuration === 5 || isTimerRunning}\n              > \n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={increaseFocusDuration}\n                disabled={focusDuration === 60 || isTimerRunning}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      \n  \n      <div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n                {/* change hard coded 5 to a variable that changes when a button is clicked */}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={decreaseBreakDuration}\n                  disabled={breakDuration === 1 || isTimerRunning}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={increaseBreakDuration}\n                  disabled={breakDuration === 15 || isTimerRunning}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n      )\n}\n\nexport default DurationControl;"]},"metadata":{},"sourceType":"module"}